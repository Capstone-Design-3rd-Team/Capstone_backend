plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Web
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring for Apache Kafka
    implementation("org.springframework.kafka:spring-kafka")

    // Redis for caching
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Jsoup for HTML Parsing (정적 사이트용)
    implementation("org.jsoup:jsoup:1.17.2")

    // Playwright for Dynamic Crawling (SPA 사이트용)
    implementation 'com.microsoft.playwright:playwright:1.40.0'

    // Rate limiter
    implementation 'com.google.guava:guava:33.0.0-jre'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'              // 테스트용 추가
    testAnnotationProcessor 'org.projectlombok:lombok'      // 테스트용 추가

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Lombok + MapStruct 함께 사용
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Test
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.kafka:spring-kafka-test")
}

tasks.named('test') {
    useJUnitPlatform()
}
