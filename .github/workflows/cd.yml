name: CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/capstone-crawler:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/capstone-crawler:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/capstone-crawler:buildcache,mode=max

      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/ubuntu/capstone-crawler"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: 30m
          script: |
            set -e
            cd /home/ubuntu/capstone-crawler

            # Docker Hub 로그인
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Docker Compose 타임아웃 설정
            export COMPOSE_HTTP_TIMEOUT=1200

            # 이미지 pull (재시도 로직 - 최대 3회)
            i=0
            until [ $i -ge 3 ]; do
              if docker pull ${{ secrets.DOCKER_USERNAME }}/capstone-crawler:latest; then
                echo "이미지 pull 성공"
                break
              fi
              i=$((i+1))
              echo "이미지 pull 실패 (${i}/3). 10초 후 재시도..."
              sleep 10
            done

            if [ $i -ge 3 ]; then
              echo "이미지 pull 최종 실패"
              exit 1
            fi

            # 앱 서비스만 재시작
            docker-compose -f docker-compose.prod.yml up -d --no-deps app

            # Health check (최대 60초 대기)
            echo "Health check 시작..."
            for i in {1..12}; do
              if docker exec capstone-crawler-prod curl -f http://localhost:8080/actuator/health; then
                echo "Health check 성공"
                break
              fi
              echo "Health check 대기 중... (${i}/12)"
              sleep 5
            done

            # 이전 이미지 정리
            docker image prune -f

            echo "배포 완료"
